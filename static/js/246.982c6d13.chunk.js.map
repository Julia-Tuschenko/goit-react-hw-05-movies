{"version":3,"file":"static/js/246.982c6d13.chunk.js","mappings":"uZAAiBA,EAAWC,EAAQ,MAA5BC,QAEKC,EAAOH,EAAOI,GAAV,sQAYJC,EAAOL,EAAOM,GAAV,+IAOJC,EAAMP,EAAOQ,IAAV,2OAWHC,EAAQT,EAAOU,EAAV,uIASLC,EAAOX,EAAOY,KAAV,2CAGJC,EAAQb,EAAOc,MAAV,0IAOLC,EAAUf,EAAOgB,OAAV,obAoBPC,EAAcjB,EAAOgB,OAAV,wX,yFCtCxB,UA5BA,WACI,OAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAQA,OALAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,qBAAoBC,MAAK,SAACC,GACtB,OAAOJ,EAAcI,EAAKC,cAE/B,CAACL,KAEA,2BACI,SAAC,EAAAjB,KAAD,UACCgB,GAAcA,EAAWO,KAAI,SAAAC,GAC1B,OACIA,EAAMC,QACF,SAAC,EAAAvB,KAAD,WACI,UAAC,KAAD,CAAMwB,GAAE,kBAAaF,EAAMG,IAAMC,MAAO,IAAxC,WACI,SAAC,EAAAxB,IAAD,CAAKyB,IAAKL,EAAMM,YAAN,UAfvB,mCAeuB,OAA+BN,EAAMM,aAdvD,eAcmFC,IAAKP,EAAMG,MACtF,SAAC,EAAArB,MAAD,UAAQkB,EAAMC,YAHXD,EAAMG,a,oRClBzCK,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,2CAGHd,EAAiB,mCAAG,sGACRa,IAAAA,IAAA,6BAAgCC,IADxB,cACzBC,EADyB,OAEzBb,EAAOa,EAASb,KAFS,kBAGxBA,GAHwB,2CAAH,qDAMjBc,EAAgB,mCAAG,WAAOC,GAAP,yFACPJ,IAAAA,IAAA,wBAA2BC,EAA3B,kBAA4CG,IADrC,cACxBF,EADwB,OAExBb,EAAOa,EAASb,KAFQ,kBAGvBA,GAHuB,2CAAH,sDAMhBgB,EAAc,mCAAG,WAAOC,GAAP,yFACLN,IAAAA,IAAA,iBAAoBM,EAApB,oBAAuCL,IADlC,cACtBC,EADsB,OAEtBb,EAAOa,EAASb,KAFM,kBAGrBA,GAHqB,2CAAH,sDAMdkB,EAAe,mCAAG,WAAOD,GAAP,yFACNN,IAAAA,IAAA,iBAAoBM,EAApB,YAA+BL,IADzB,cACvBC,EADuB,OAEvBb,EAAOa,EAASb,KAFO,kBAGtBA,GAHsB,2CAAH,sDAMfmB,EAAe,mCAAG,WAAOF,GAAP,yFACNN,IAAAA,IAAA,iBAAoBM,EAApB,oBAAuCL,IADjC,cACvBC,EADuB,OAEvBb,EAAOa,EAASb,KAFO,kBAGtBA,GAHsB,2CAAH","sources":["components/GlobalStule/Pages.styled.jsx","components/HomePage.jsx","components/services/moviesApi.js"],"sourcesContent":["const { default: styled } = require(\"styled-components\");\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 30px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nexport const Item = styled.li`\n  width: 100%;\n  height: 520px;\n  border-radius: 15px;\n  box-shadow: -1px -2px 19px -3px rgba(162, 86, 225, 0.53);\n`\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 460px;\n  object-fit: cover;\n  border-radius: 15px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n     transform: scale(1.02);\n     cursor: pointer;\n  }\n`\nexport const Title = styled.p`\nfont-size: 18px;\nfont-weight: 700;\ncolor: black;\nlist-style: none;\ntext-align: center;\nmargin-top: 20px;\n`\n\nexport const Form = styled.form`\nmargin-top: 30px;\n`\nexport const Input = styled.input`\n  display: inline-block;\n  width: 400px;\n  height: 50px;\n  border:  7px inset #7A24A4;\n  border-radius: 5px;\n`\nexport const BtnForm = styled.button`\n  height: 50px;\n  width: 70px;\n  margin-left: 5px;\n  border:  7px inset #7A24A4;\n  border-radius: 5px;\n  background: #ffffff;\n  cursor: pointer;\n  color: black;\n  font-weight: 500;\n  font-size: 14px;\n  transition-property: color, background-color;\n  transition-duration: 500ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  :hover{\n    background: #dbbae7;\n    color: white;\n  }\n`\n\nexport const BtnControls = styled.button`\n  margin: 10px;\n  height: 50px;\n  width: 100px;\n  margin-left: 5px;\n  border:  7px double #8E52A4;\n  border-radius: 5px;\n  background: #ffffff;\n  cursor: pointer;\n  color: black;\n  font-weight: 500;\n  font-size: 14px;\n  box-shadow: -1px -2px 19px -3px rgba(162, 86, 225, 0.53);\n  :hover{\n    background: #dbbae7;\n    color: white;\n  }\n`\n\n","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getTrendingMovies } from \"./services/moviesApi\";\nimport { List, Item, Img, Title } from \"./GlobalStule/Pages.styled\";\n\nfunction HomePage() {\n    const [moviesList, setMoviesList] = useState([]);\n    const imgUrl = 'https://image.tmdb.org/t/p/w400';\n    const notMovieImg = 'ðŸ¤”';\n    useEffect(() => {\n        getTrendingMovies().then((data) => {\n            return setMoviesList(data.results)\n        })\n    }, [setMoviesList]);\n    return (\n        <main>\n            <List>\n            {moviesList && moviesList.map(movie => {\n                return (\n                    movie.title && (\n                        <Item key={movie.id}>\n                            <Link to={`/movies/${movie.id}`} state={'/'}>\n                                <Img src={movie.poster_path? `${imgUrl}${movie.poster_path}`: notMovieImg} alt={movie.id} />\n                                <Title>{movie.title}</Title>\n                            </Link>\n                        </Item>\n                  )  \n                )\n            })}\n        </List>\n        </main>\n    )\n};\nexport default HomePage;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'api_key=c61f2d44d8586d8ca2ac9044279c7982';\n\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/all/week?${API_KEY}`) \n  const data = response.data;\n  return data;\n}\n\nexport const getMoviesByQuery = async (query) => {\n  const response = await axios.get(`/search/movie?${API_KEY}&query=${query}`) \n  const data = response.data;\n  return data;\n}\n\nexport const getMovieReview = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}/reviews?${API_KEY}`) \n  const data = response.data;\n  return data;\n}\n\nexport const getMovieDetails = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}?${API_KEY}`) \n  const data = response.data;\n  return data;\n}\n\nexport const getMovieCredits = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}/credits?${API_KEY}`) \n  const data = response.data;\n  return data;\n}"],"names":["styled","require","default","List","ul","Item","li","Img","img","Title","p","Form","form","Input","input","BtnForm","button","BtnControls","useState","moviesList","setMoviesList","useEffect","getTrendingMovies","then","data","results","map","movie","title","to","id","state","src","poster_path","alt","axios","API_KEY","response","getMoviesByQuery","query","getMovieReview","movieId","getMovieDetails","getMovieCredits"],"sourceRoot":""}