{"version":3,"file":"static/js/708.a5a077cf.chunk.js","mappings":"2ZAAiBA,EAAWC,EAAQ,MAA5BC,QAEKC,EAAOH,EAAOI,GAAV,sQAYJC,EAAOL,EAAOM,GAAV,+IAOJC,EAAMP,EAAOQ,IAAV,2OAWHC,EAAQT,EAAOU,EAAV,uIASLC,EAAOX,EAAOY,KAAV,2CAGJC,EAAQb,EAAOc,MAAV,0IAOLC,EAAUf,EAAOgB,OAAV,obAoBPC,EAAcjB,EAAOgB,OAAV,wX,mGC9BxB,UAlCA,WACI,OAA4BE,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAkB/B,OAfAC,EAAAA,EAAAA,YAAU,WACNF,IACAG,EAAAA,EAAAA,kBAAiBH,GAAOI,MAAK,SAACC,GAC1B,OAAOT,EAAUS,EAAKC,cAG7B,CAACN,KAUE,iCACA,UAAC,EAAAb,KAAD,CAAMoB,SATW,SAACC,GAClBA,EAAGC,iBACHV,EAAgB,CAAEC,MAAOQ,EAAGE,cAAcC,SAASX,MAAMY,QACzDJ,EAAGE,cAAcG,SAMaC,aAAa,MAA3C,WACI,4BACI,SAAC,EAAAzB,MAAD,CAAO0B,KAAK,OAAOC,KAAK,QAAQC,YAAY,mBAEhD,SAAC,EAAA1B,QAAD,CAASwB,KAAK,SAAd,uBAECpB,IAAU,SAAC,UAAD,CAAYA,OAAQA,S,sECT3C,UAxBmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACZuB,GAAWC,EAAAA,EAAAA,MAIjB,OACI,SAAC,EAAAxC,KAAD,UACKgB,GACGA,EAAOyB,KAAI,SAAAC,GACP,OACI,SAAC,EAAAxC,KAAD,WACI,UAAC,KAAD,CACIyC,GAAE,UAAKD,EAAME,IACbC,MAAK,UAAKN,EAASO,UAAd,OAAyBP,EAASQ,QAF3C,WAGI,SAAC,EAAA3C,IAAD,CAAK4C,IAAKN,EAAMO,YAAN,UAZvB,mCAYuB,OAA+BP,EAAMO,aAXvD,eAWmFC,IAAKR,EAAME,MACtF,SAAC,EAAAtC,MAAD,UAAQoC,EAAMS,YALXT,EAAME,W,oRCXzCQ,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,2CAGHC,EAAiB,mCAAG,sGACRF,IAAAA,IAAA,6BAAgCC,IADxB,cACzBE,EADyB,OAEzB7B,EAAO6B,EAAS7B,KAFS,kBAGxBA,GAHwB,2CAAH,qDAMjBF,EAAgB,mCAAG,WAAOH,GAAP,yFACP+B,IAAAA,IAAA,wBAA2BC,EAA3B,kBAA4ChC,IADrC,cACxBkC,EADwB,OAExB7B,EAAO6B,EAAS7B,KAFQ,kBAGvBA,GAHuB,2CAAH,sDAMhB8B,EAAc,mCAAG,WAAOC,GAAP,yFACLL,IAAAA,IAAA,iBAAoBK,EAApB,oBAAuCJ,IADlC,cACtBE,EADsB,OAEtB7B,EAAO6B,EAAS7B,KAFM,kBAGrBA,GAHqB,2CAAH,sDAMdgC,EAAe,mCAAG,WAAOD,GAAP,yFACNL,IAAAA,IAAA,iBAAoBK,EAApB,YAA+BJ,IADzB,cACvBE,EADuB,OAEvB7B,EAAO6B,EAAS7B,KAFO,kBAGtBA,GAHsB,2CAAH,sDAMfiC,EAAe,mCAAG,WAAOF,GAAP,yFACNL,IAAAA,IAAA,iBAAoBK,EAApB,oBAAuCJ,IADjC,cACvBE,EADuB,OAEvB7B,EAAO6B,EAAS7B,KAFO,kBAGtBA,GAHsB,2CAAH","sources":["components/GlobalStule/Pages.styled.jsx","components/MoviesPage.jsx","components/SearchList/SearchList.jsx","components/services/moviesApi.js"],"sourcesContent":["const { default: styled } = require(\"styled-components\");\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 30px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nexport const Item = styled.li`\n  width: 100%;\n  height: 520px;\n  border-radius: 15px;\n  box-shadow: -1px -2px 19px -3px rgba(162, 86, 225, 0.53);\n`\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 460px;\n  object-fit: cover;\n  border-radius: 15px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n     transform: scale(1.02);\n     cursor: pointer;\n  }\n`\nexport const Title = styled.p`\nfont-size: 18px;\nfont-weight: 700;\ncolor: black;\nlist-style: none;\ntext-align: center;\nmargin-top: 20px;\n`\n\nexport const Form = styled.form`\nmargin-top: 30px;\n`\nexport const Input = styled.input`\n  display: inline-block;\n  width: 400px;\n  height: 50px;\n  border:  7px inset #7A24A4;\n  border-radius: 5px;\n`\nexport const BtnForm = styled.button`\n  height: 50px;\n  width: 70px;\n  margin-left: 5px;\n  border:  7px inset #7A24A4;\n  border-radius: 5px;\n  background: #ffffff;\n  cursor: pointer;\n  color: black;\n  font-weight: 500;\n  font-size: 14px;\n  transition-property: color, background-color;\n  transition-duration: 500ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  :hover{\n    background: #dbbae7;\n    color: white;\n  }\n`\n\nexport const BtnControls = styled.button`\n  margin: 10px;\n  height: 50px;\n  width: 100px;\n  margin-left: 5px;\n  border:  7px double #8E52A4;\n  border-radius: 5px;\n  background: #ffffff;\n  cursor: pointer;\n  color: black;\n  font-weight: 500;\n  font-size: 14px;\n  box-shadow: -1px -2px 19px -3px rgba(162, 86, 225, 0.53);\n  :hover{\n    background: #dbbae7;\n    color: white;\n  }\n`\n\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Form, Input, BtnForm } from \"./GlobalStule/Pages.styled\";\nimport { getMoviesByQuery } from \"./services/moviesApi\";\nimport  SearchList  from \"./SearchList/SearchList\";\n\n\nfunction MoviesPage() {\n    const [movies, setMovies] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query');\n    \n\n    useEffect(() => {\n    if (query) {\n        getMoviesByQuery(query).then((data) => {\n            return setMovies(data.results)\n        })\n    }\n  }, [query]);\n\n    const handleSubmit = (ev) => {\n        ev.preventDefault();\n        setSearchParams({ query: ev.currentTarget.elements.query.value });\n        ev.currentTarget.reset();\n}\n\n\n    return (\n        <>\n        <Form onSubmit={handleSubmit} autoComplete=\"off\">\n            <label>\n                <Input type=\"text\" name=\"query\" placeholder='Search film'/>\n            </label>\n            <BtnForm type=\"submit\">Search</BtnForm>\n            </Form>\n            {movies && <SearchList movies={movies}/>}\n        </>\n    )\n};\n\nexport default MoviesPage;","import { Link, useLocation } from 'react-router-dom';\nimport { List, Item, Img, Title } from \"../GlobalStule/Pages.styled\";\n\nconst SearchList = ({ movies }) => {\n    const location = useLocation();\n    const imgUrl = 'https://image.tmdb.org/t/p/w400';\n    const notMovieImg = 'ðŸ¤”';\n    \n    return (\n        <List>\n            {movies &&\n                movies.map(movie => {\n                    return (\n                        <Item key={movie.id}>\n                            <Link\n                                to={`${movie.id}`}\n                                state={`${location.pathname}${location.search}`}>\n                                <Img src={movie.poster_path? `${imgUrl}${movie.poster_path}`: notMovieImg} alt={movie.id} />\n                                <Title>{movie.title}</Title>\n                            </Link>\n                        </Item>\n                    );\n                })}\n        </List>\n    )\n};\n\nexport default SearchList;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'api_key=c61f2d44d8586d8ca2ac9044279c7982';\n\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/all/week?${API_KEY}`) \n  const data = response.data;\n  return data;\n}\n\nexport const getMoviesByQuery = async (query) => {\n  const response = await axios.get(`/search/movie?${API_KEY}&query=${query}`) \n  const data = response.data;\n  return data;\n}\n\nexport const getMovieReview = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}/reviews?${API_KEY}`) \n  const data = response.data;\n  return data;\n}\n\nexport const getMovieDetails = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}?${API_KEY}`) \n  const data = response.data;\n  return data;\n}\n\nexport const getMovieCredits = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}/credits?${API_KEY}`) \n  const data = response.data;\n  return data;\n}"],"names":["styled","require","default","List","ul","Item","li","Img","img","Title","p","Form","form","Input","input","BtnForm","button","BtnControls","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getMoviesByQuery","then","data","results","onSubmit","ev","preventDefault","currentTarget","elements","value","reset","autoComplete","type","name","placeholder","location","useLocation","map","movie","to","id","state","pathname","search","src","poster_path","alt","title","axios","API_KEY","getTrendingMovies","response","getMovieReview","movieId","getMovieDetails","getMovieCredits"],"sourceRoot":""}